[ERROR] Tests run: 5, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 11.53 s <<< FAILURE! -- in rapid.service.client.ClientControllerTest
[ERROR] rapid.service.client.ClientControllerTest.getAllClients_ok -- Time elapsed: 10.42 s <<< ERROR!
org.mockito.exceptions.misusing.UnfinishedStubbingException:

Unfinished stubbing detected here:
-> at rapid.service.client.ClientControllerTest.getAllClients_ok(ClientControllerTest.java:58)

E.g. thenReturn() may be missing.
Examples of correct stubbing:
    when(mock.isOk()).thenReturn(true);
    when(mock.isOk()).thenThrow(exception);
    doThrow(exception).when(mock).someVoidMethod();
Hints:
 1. missing thenReturn()
 2. you are trying to stub a final method, which is not supported
 3. you are stubbing the behaviour of another mock inside before 'thenReturn' instruction is completed

        at rapid.dto.client.ClientDTO.getClient(ClientDTO.java:10)
        at rapid.service.client.ClientControllerTest.mockClient(ClientControllerTest.java:40)
        at rapid.service.client.ClientControllerTest.getAllClients_ok(ClientControllerTest.java:58)
        at java.base/java.lang.reflect.Method.invoke(Method.java:565)
        at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
        at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)

[ERROR] rapid.service.client.ClientControllerTest.getClientById_ok -- Time elapsed: 0.125 s <<< ERROR!
org.mockito.exceptions.misusing.UnfinishedStubbingException:

Unfinished stubbing detected here:
-> at rapid.service.client.ClientControllerTest.getClientById_ok(ClientControllerTest.java:101)

E.g. thenReturn() may be missing.
Examples of correct stubbing:
    when(mock.isOk()).thenReturn(true);
    when(mock.isOk()).thenThrow(exception);
    doThrow(exception).when(mock).someVoidMethod();
Hints:
 1. missing thenReturn()
 2. you are trying to stub a final method, which is not supported
 3. you are stubbing the behaviour of another mock inside before 'thenReturn' instruction is completed

        at rapid.dto.client.ClientDTO.getClient(ClientDTO.java:10)
        at rapid.service.client.ClientControllerTest.mockClient(ClientControllerTest.java:40)
        at rapid.service.client.ClientControllerTest.getClientById_ok(ClientControllerTest.java:101)
        at java.base/java.lang.reflect.Method.invoke(Method.java:565)
        at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
        at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)

[ERROR] rapid.service.client.ClientControllerTest.getClientsPaginated_ok -- Time elapsed: 0.062 s <<< ERROR!
org.mockito.exceptions.misusing.UnfinishedStubbingException:

Unfinished stubbing detected here:
-> at rapid.service.client.ClientControllerTest.getClientsPaginated_ok(ClientControllerTest.java:85)

E.g. thenReturn() may be missing.
Examples of correct stubbing:
    when(mock.isOk()).thenReturn(true);
    when(mock.isOk()).thenThrow(exception);
    doThrow(exception).when(mock).someVoidMethod();
Hints:
 1. missing thenReturn()
 2. you are trying to stub a final method, which is not supported
 3. you are stubbing the behaviour of another mock inside before 'thenReturn' instruction is completed

        at rapid.dto.client.ClientDTO.getClient(ClientDTO.java:10)
        at rapid.service.client.ClientControllerTest.mockClient(ClientControllerTest.java:40)
        at rapid.service.client.ClientControllerTest.getClientsPaginated_ok(ClientControllerTest.java:86)
        at java.base/java.lang.reflect.Method.invoke(Method.java:565)
        at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
        at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)

[INFO] 
[INFO] Results:
[INFO]
[ERROR] Errors: 
[ERROR]   ClientControllerTest.getAllClients_ok:58->mockClient:40 ┬╗ UnfinishedStubbing 
Unfinished stubbing detected here:
-> at rapid.service.client.ClientControllerTest.getAllClients_ok(ClientControllerTest.java:58)

E.g. thenReturn() may be missing.
Examples of correct stubbing:
    when(mock.isOk()).thenReturn(true);
    when(mock.isOk()).thenThrow(exception);
    doThrow(exception).when(mock).someVoidMethod();
Hints:
 1. missing thenReturn()
 2. you are trying to stub a final method, which is not supported
 3. you are stubbing the behaviour of another mock inside before 'thenReturn' instruction is completed

[ERROR]   ClientControllerTest.getClientById_ok:101->mockClient:40 ┬╗ UnfinishedStubbing 
Unfinished stubbing detected here:
-> at rapid.service.client.ClientControllerTest.getClientById_ok(ClientControllerTest.java:101)

E.g. thenReturn() may be missing.
Examples of correct stubbing:
    when(mock.isOk()).thenReturn(true);
    when(mock.isOk()).thenThrow(exception);
    doThrow(exception).when(mock).someVoidMethod();
Hints:
 1. missing thenReturn()
 2. you are trying to stub a final method, which is not supported
 3. you are stubbing the behaviour of another mock inside before 'thenReturn' instruction is completed

[ERROR]   ClientControllerTest.getClientsPaginated_ok:86->mockClient:40 ┬╗ UnfinishedStubbing 
Unfinished stubbing detected here:
-> at rapid.service.client.ClientControllerTest.getClientsPaginated_ok(ClientControllerTest.java:85)

E.g. thenReturn() may be missing.
Examples of correct stubbing:
    when(mock.isOk()).thenReturn(true);
    when(mock.isOk()).thenThrow(exception);
    doThrow(exception).when(mock).someVoidMethod();
Hints:
 1. missing thenReturn()
 2. you are trying to stub a final method, which is not supported
 3. you are stubbing the behaviour of another mock inside before 'thenReturn' instruction is completed

[INFO]
[ERROR] Tests run: 5, Failures: 0, Errors: 3, Skipped: 0
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  36.728 s
[INFO] Finished at: 2025-09-14T11:09:20-05:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.2.2:test (default-test) on project client-sysprin-reader: 
[ERROR]
[ERROR] Please refer to C:\Users\F2LIPBX\spring_boot\trace-client-sysprin-service\client-sysprin-reader\target\surefire-reports for the individual test results. 
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.



package rapid.service.client;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import rapid.dto.client.ClientDTO;
import rapid.exception.ClientNotFoundException;
import rapid.service.client.ClientService;

import java.util.List;
import java.util.Optional;
import rapid.client.web.ClientController;

import static org.hamcrest.Matchers.hasSize;
import static org.mockito.ArgumentMatchers.anyInt;
import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.*;
import org.junit.jupiter.api.BeforeEach;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;



class ClientControllerTest {

        private MockMvc mockMvc;
    private ClientService clientService;

    private ClientDTO mockClient(String id) {
        ClientDTO dto = Mockito.mock(ClientDTO.class);
        // IMPORTANT: stub getClientId(), not getClient()
        when(dto.getClient()).thenReturn(id);
        return dto;
    }

    @BeforeEach
    void setup() {
        clientService = Mockito.mock(ClientService.class);
        ClientController controller = new ClientController(clientService);

        // If you have a @ControllerAdvice for exceptions, add it here via setControllerAdvice(...)
        mockMvc = MockMvcBuilders.standaloneSetup(controller)
                //.setControllerAdvice(new GlobalExceptionHandler())
                .build();
    }

    @Test
    @DisplayName("GET /api/allClients returns 200 and list")
    void getAllClients_ok() throws Exception {
        when(clientService.getAllClients()).thenReturn(List.of(mockClient("CL001"), mockClient("CL002")));

        mockMvc.perform(get("/api/allClients").accept(MediaType.APPLICATION_JSON))
                .andExpect(status().isOk())
                .andExpect(jsonPath("$", hasSize(2)))
                .andExpect(jsonPath("$[0].clientId").value("CL001"))
                .andExpect(jsonPath("$[1].clientId").value("CL002"));

        verify(clientService).getAllClients();
        verifyNoMoreInteractions(clientService);
    }

    @Test
    @DisplayName("GET /api/client/page returns 200 with defaults (page=0,size=10)")
    void getClientsPaginated_defaults() throws Exception {
        when(clientService.fetchClientsWithPagination(anyInt(), anyInt())).thenReturn(List.of());

        mockMvc.perform(get("/api/client/page").accept(MediaType.APPLICATION_JSON))
                .andExpect(status().isOk());

        verify(clientService).fetchClientsWithPagination(0, 10);
        verifyNoMoreInteractions(clientService);
    }

    @Test
    @DisplayName("GET /api/client/page with custom params")
    void getClientsPaginated_ok() throws Exception {
        when(clientService.fetchClientsWithPagination(2, 5))
                .thenReturn(List.of(mockClient("CL010"), mockClient("CL011")));

        mockMvc.perform(get("/api/client/page").queryParam("page", "2").queryParam("size", "5"))
                .andExpect(status().isOk())
                .andExpect(jsonPath("$", hasSize(2)))
                .andExpect(jsonPath("$[0].clientId").value("CL010"))
                .andExpect(jsonPath("$[1].clientId").value("CL011"));

        verify(clientService).fetchClientsWithPagination(2, 5);
        verifyNoMoreInteractions(clientService);
    }

    @Test
    @DisplayName("GET /api/client/{id} returns 200 when found")
    void getClientById_ok() throws Exception {
        when(clientService.getClientDetails("CL123")).thenReturn(Optional.of(mockClient("CL123")));

        mockMvc.perform(get("/api/client/{clientId}", "CL123"))
                .andExpect(status().isOk())
                .andExpect(jsonPath("$.clientId").value("CL123"));

        verify(clientService).getClientDetails("CL123");
        verifyNoMoreInteractions(clientService);
    }

    @Test
    @DisplayName("GET /api/client/{id} returns 404 when not found")
    void getClientById_notFound() throws Exception {
        when(clientService.getClientDetails("NO_SUCH")).thenReturn(Optional.empty());

        mockMvc.perform(get("/api/client/{clientId}", "NO_SUCH"))
                .andExpect(status().isNotFound()); // ensure exception maps to 404 in your controller/advice

        verify(clientService).getClientDetails("NO_SUCH");
        verifyNoMoreInteractions(clientService);
    }
}





[ERROR]
