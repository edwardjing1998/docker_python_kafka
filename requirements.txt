package rapid.client.web;

import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import rapid.dto.client.ClientReportOptionDTO;
import rapid.service.client.ClientReportOptionService;

import java.util.List;
import java.util.regex.Pattern;
import rapid.exception.ClientBadRequestException;

@RestController
@RequestMapping("api/")
@RequiredArgsConstructor
public class ClientReportOptionController {

     private static final Pattern CLINT_ID_PATTERN = Pattern.compile("^[0-9]{4}$");

    private final ClientReportOptionService service;

    @GetMapping("client/report-option")
    public ResponseEntity<List<ClientReportOptionDTO>> getAllReports() {
        List<ClientReportOptionDTO> dtos = service.getAllWithDetails();
        return ResponseEntity.ok(dtos);
    }

        @GetMapping("client/{clientId}/report-option")
    public ResponseEntity<List<ClientReportOptionDTO>> getReportsByClientId(@PathVariable String clientId) {

        if (!CLINT_ID_PATTERN.matcher(clientId).matches()) {
            throw new ClientBadRequestException("Invalid 'clientNumber': must be exactly 4 digits and can not contains alphabetic characters");
        }

        return ResponseEntity.ok(service.getAllWithDetailsByClient(clientId));
    }
    
}
